from typing import NoReturn
import logging

log = logging.getLogger(__name__)


class WikiJsException(Exception): ...


class ClientError(WikiJsException): ...


class DataError(WikiJsException): ...


# region AUTHENTICATION / USERS ERRORS
class AuthUsersError(WikiJsException): ...
class AuthGenericError(AuthUsersError): ...
class AuthLoginFailed(AuthUsersError): ...
class AuthProviderInvalid(AuthUsersError): ...
class AuthAccountAlreadyExists(AuthUsersError): ...
class AuthTFAFailed(AuthUsersError): ...
class AuthTFAInvalid(AuthUsersError): ...
class BruteInstanceIsInvalid(AuthUsersError): ...
class BruteTooManyAttempts(AuthUsersError): ...
class UserCreationFailed(AuthUsersError): ...
class AuthRegistrationDisabled(AuthUsersError): ...
class AuthRegistrationDomainUnauthorized(AuthUsersError): ...
class InputInvalid(AuthUsersError): ...
class AuthAccountBanned(AuthUsersError): ...
class AuthAccountNotVerified(AuthUsersError): ...
class AuthValidationTokenInvalid(AuthUsersError): ...
class UserNotFound(AuthUsersError): ...
class UserDeleteForeignConstraint(AuthUsersError): ...
class UserDeleteProtected(AuthUsersError): ...
class AuthRequired(AuthUsersError): ...
class AuthPasswordInvalid(AuthUsersError): ...
# endregion


# region ASSETS ERRORS
class AssetsError(WikiJsException): ...
class AssetGenericError(AssetsError): ...
class AssetFolderExists(AssetsError): ...
class AssetDeleteForbidden(AssetsError): ...
class AssetInvalid(AssetsError): ...
class AssetRenameCollision(AssetsError): ...
class AssetRenameForbidden(AssetsError): ...
class AssetRenameInvalid(AssetsError): ...
class AssetRenameInvalidExt(AssetsError): ...
class AssetRenameTargetForbidden(AssetsError): ...
# endregion


# region MAIL ERRORS
class MailError(WikiJsException): ...
class MailGenericError(MailError): ...
class MailNotConfigured(MailError): ...
class MailTemplateFailed(MailError): ...
class MailInvalidRecipient(MailError): ...
# endregion


# region SEARCH ERRORS
class SearchError(WikiJsException): ...
class SearchGenericError(SearchError): ...
class SearchActivationFailed(SearchError): ...
# endregion


# region LOCALIZATION ERRORS
class LocalizationError(WikiJsException): ...
class LocaleGenericError(LocalizationError): ...
class LocaleInvalidNamespace(LocalizationError): ...
# endregion


# region PAGES ERRORS
class PageError(WikiJsException): ...
class PageGenericError(PageError): ...
class PageDuplicateCreate(PageError): ...
class PageNotFound(PageError): ...
class PageEmptyContent(PageError): ...
class PageIllegalPath(PageError): ...
class PagePathCollision(PageError): ...
class PageMoveForbidden(PageError): ...
class PageCreateForbidden(PageError): ...
class PageUpdateForbidden(PageError): ...
class PageDeleteForbidden(PageError): ...
class PageRestoreForbidden(PageError): ...
class PageHistoryForbidden(PageError): ...
class PageViewForbidden(PageError): ...
# endregion


# region SYSTEM ERRORS
class SystemError(WikiJsException): ...
class SystemGenericError(SystemError): ...
class SystemSSLDisabled(SystemError): ...
class SystemSSLRenewInvalidProvider(SystemError): ...
class SystemSSLLEUnavailable(SystemError): ...
# endregion


# region COMMENT ERRORS
class CommentError(WikiJsException): ...
class CommentGenericError(CommentError): ...
class CommentPostForbidden(CommentError): ...
class CommentContentMissing(CommentError): ...
class CommentManageForbidden(CommentError): ...
class CommentNotFound(CommentError): ...
class CommentViewForbidden(CommentError): ...
# endregion


ERROR_CODES = {
    1: DataError,

    1001: AuthGenericError,
    1002: AuthLoginFailed,
    1003: AuthProviderInvalid,
    1004: AuthAccountAlreadyExists,
    1005: AuthTFAFailed,
    1006: AuthTFAInvalid,
    1007: BruteInstanceIsInvalid,
    1008: BruteTooManyAttempts,
    1009: UserCreationFailed,
    1010: AuthRegistrationDisabled,
    1011: AuthRegistrationDomainUnauthorized,
    1012: InputInvalid,
    1013: AuthAccountBanned,
    1014: AuthAccountNotVerified,
    1015: AuthValidationTokenInvalid,
    1016: UserNotFound,
    1017: UserDeleteForeignConstraint,
    1018: UserDeleteProtected,
    1019: AuthRequired,
    1020: AuthPasswordInvalid,

    2001: AssetGenericError,
    2002: AssetFolderExists,
    2003: AssetDeleteForbidden,
    2004: AssetInvalid,
    2005: AssetRenameCollision,
    2006: AssetRenameForbidden,
    2007: AssetRenameInvalid,
    2008: AssetRenameInvalidExt,
    2009: AssetRenameTargetForbidden,

    3001: MailGenericError,
    3002: MailNotConfigured,
    3003: MailTemplateFailed,
    3004: MailInvalidRecipient,

    4001: SearchGenericError,
    4002: SearchActivationFailed,

    5001: LocaleGenericError,
    5002: LocaleInvalidNamespace,

    6001: PageGenericError,
    6002: PageDuplicateCreate,
    6003: PageNotFound,
    6004: PageEmptyContent,
    6005: PageIllegalPath,
    6006: PagePathCollision,
    6007: PageMoveForbidden,
    6008: PageCreateForbidden,
    6009: PageUpdateForbidden,
    6010: PageDeleteForbidden,
    6011: PageRestoreForbidden,
    6012: PageHistoryForbidden,
    6013: PageViewForbidden,

    7001: SystemGenericError,
    7002: SystemSSLDisabled,
    7003: SystemSSLRenewInvalidProvider,
    7004: SystemSSLLEUnavailable,

    8001: CommentGenericError,
    8002: CommentPostForbidden,
    8003: CommentContentMissing,
    8004: CommentManageForbidden,
    8005: CommentNotFound,
    8006: CommentViewForbidden,
}


def raise_exc(code: int, message: str) -> NoReturn:
    try:
        raise ERROR_CODES[code](message)
    except KeyError:
        log.warning('Error code %i not indexed', code)
        raise WikiJsException(message) from None
